PS C:\visual projects\backtrader> python main.py
Registered strategy: 'hierarchical_mean_reversion' -> HierarchicalMeanReversionStrategy
Starting Unified Vectorized HFT Backtester...
Super-vectorized Hierarchical Mean Reversion Strategy
Unified GUI architecture - Maximum performance
Checking PyQt6 installation...
PyQt6 found - HFT GUI ready to launch
Checking numba optimization...
Numba found - HFT optimization enabled
Found 1 klines datasets ready for vectorized backtesting
Launching Unified Vectorized HFT GUI...
Available strategies: ['hierarchical_mean_reversion']
Available strategies: ['hierarchical_mean_reversion']
UNIFIED OPTIMIZATION MANAGER: Running optimization with new unified system
UNIFIED OPTIMIZATION MANAGER: Validating configuration with ConfigValidator
Optimization warnings: Strategy parameter 'measurement_noise_r' (5.0) is above recommended maximum (2.0); Strategy parameter 'hl_min' (1.0) is below recommended minimum (2.0); Strategy parameter 's_entry' (0.05) is below recommended minimum (1.0); No limit on klines - may cause memory issues with large datasets
UNIFIED OPTIMIZATION MANAGER: Executing optimization with FastStrategyOptimizer
Loading cached data from optimization_cache\data_7488ca5c750cc2ff.pkl
DEBUG: Loaded cached_data type: <class 'dict'>
DEBUG: cached_data keys: ['full', 'p50', 'p25', 'p10', 'full_size']
DEBUG: full type: <class 'pandas.core.frame.DataFrame'>
DEBUG: full keys: ['Symbol', 'time', 'open', 'high', 'low', 'close', 'Volume', 'datetime', 'price_range', 'body_size']
DEBUG: full columns: ['Symbol', 'time', 'open', 'high', 'low', 'close', 'Volume', 'datetime', 'price_range', 'body_size']
DEBUG: p50 type: <class 'pandas.core.frame.DataFrame'>
DEBUG: p50 keys: ['Symbol', 'time', 'open', 'high', 'low', 'close', 'Volume', 'datetime', 'price_range', 'body_size']
DEBUG: p50 columns: ['Symbol', 'time', 'open', 'high', 'low', 'close', 'Volume', 'datetime', 'price_range', 'body_size']
DEBUG: p25 type: <class 'pandas.core.frame.DataFrame'>
DEBUG: p25 keys: ['Symbol', 'time', 'open', 'high', 'low', 'close', 'Volume', 'datetime', 'price_range', 'body_size']
DEBUG: p25 columns: ['Symbol', 'time', 'open', 'high', 'low', 'close', 'Volume', 'datetime', 'price_range', 'body_size']
DEBUG: p10 type: <class 'pandas.core.frame.DataFrame'>
DEBUG: p10 keys: ['Symbol', 'time', 'open', 'high', 'low', 'close', 'Volume', 'datetime', 'price_range', 'body_size']
DEBUG: p10 columns: ['Symbol', 'time', 'open', 'high', 'low', 'close', 'Volume', 'datetime', 'price_range', 'body_size']
Starting FAST optimization for hierarchical_mean_reversion on ASTERUSDT
Data: upload/klines\ASTERUSDT-klines-10s-2025-09-20_to_2025-09-21.csv
Objective: sharpe_ratio
Trials: 3
Parallel jobs: -1
Adaptive evaluation: True
Direction: maximize
------------------------------------------------------------
C:\Users\Георгий\AppData\Local\Programs\Python\Python311\Lib\site-packages\optuna\samplers\_tpe\sampler.py:295: ExperimentalWarning:

``multivariate`` option is an experimental feature. The interface can change in the future.

C:\Users\Георгий\AppData\Local\Programs\Python\Python311\Lib\site-packages\optuna\samplers\_tpe\sampler.py:306: ExperimentalWarning:

``group`` option is an experimental feature. The interface can change in the future.

[I 2025-10-07 02:57:10,081] A new study created in memory with name: hierarchical_mean_reversion_ASTERUSDT_20251007_025708
Running optimization with 8 parallel jobs...
DEBUG: Starting trial 0
DEBUG: Generated params: {'measurement_noise_r': 0.8770765422007163, 'process_noise_q': 0.013240417204288008, 'hmm_window_size': 66, 'prob_threshold_trend': 0.6361390189545194, 'prob_threshold_sideways': 0.5519780050674119, 'prob_threshold_dead': 0.8306252913241178, 'ou_window_size': 124, 'hl_min': 20.363879809286047, 'hl_max': 35.982885591814096, 'relative_uncertainty_threshold': 0.9812811167523088, 'uncertainty_threshold': 0.8464229196130091, 's_entry': 3.4808936518669014, 'z_stop': 4.195609048868377, 'timeout_multiplier': 2.4104116251408922, 'initial_capital': 81632.99234739246, 'commission_pct': 0.0009820180151630927}
DEBUG: Starting trial 1
DEBUG: Using data_key=p10, data_size_pct=0.1
DEBUG: Starting trial 2
DEBUG: Accessing cached_data with key 'p10'
DEBUG: Generated params: {'measurement_noise_r': 1.2138787250700127, 'process_noise_q': 0.08106720969090359, 'hmm_window_size': 23, 'prob_threshold_trend': 0.8098910030624269, 'prob_threshold_sideways': 0.6471973711122556, 'prob_threshold_dead': 0.7480879864280251, 'ou_window_size': 86, 'hl_min': 7.1361110078388705, 'hl_max': 36.237668816361946, 'relative_uncertainty_threshold': 0.8662259271629362, 'uncertainty_threshold': 0.3104517490329981, 's_entry': 1.4513056124042554, 'z_stop': 3.580091375372757, 'timeout_multiplier': 3.4479772050754813, 'initial_capital': 2368.188964491821, 'commission_pct': 0.0005772640408067005}
DEBUG: Available keys in cached_data: ['full', 'p50', 'p25', 'p10', 'full_size']
DEBUG: Using data_key=p10, data_size_pct=0.1
DEBUG: Accessing cached_data with key 'p10'
DEBUG: Retrieved data_arrays, type=<class 'dict'>
DEBUG: Available keys in cached_data: ['full', 'p50', 'p25', 'p10', 'full_size']
DEBUG: data_key=p10
DEBUG: Retrieved data_arrays, type=<class 'dict'>
DEBUG: data_arrays keys=['times', 'opens', 'highs', 'lows', 'closes', 'volumes']
DEBUG: data_key=p10
DEBUG: 'times' in data_arrays=True
DEBUG: data_arrays keys=['times', 'opens', 'highs', 'lows', 'closes', 'volumes']
DEBUG: times type=<class 'numpy.ndarray'>, shape=(1728,)
DEBUG: 'times' in data_arrays=True
DEBUG: 'closes' in data_arrays=True
DEBUG: times type=<class 'numpy.ndarray'>, shape=(1728,)
DEBUG: closes type=<class 'numpy.ndarray'>, shape=(1728,)
DEBUG: 'closes' in data_arrays=True
DEBUG: Calling turbo_process_dataset with numpy arrays...
DEBUG: closes type=<class 'numpy.ndarray'>, shape=(1728,)
DEBUG: About to call strategy.turbo_process_dataset
DEBUG: Calling turbo_process_dataset with numpy arrays...
DEBUG: times available: True
DEBUG: About to call strategy.turbo_process_dataset
DEBUG: closes available: True
DEBUG: times available: True
DEBUG: turbo_process_dataset called
DEBUG: closes available: True
DEBUG: times type=<class 'numpy.ndarray'>, is None=False
DEBUG: turbo_process_dataset called
DEBUG: times shape=(1728,)
DEBUG: times type=<class 'numpy.ndarray'>, is None=False
DEBUG: prices type=<class 'numpy.ndarray'>, is None=False
DEBUG: times shape=(1728,)
DEBUG: prices shape=(1728,)
DEBUG: prices type=<class 'numpy.ndarray'>, is None=False
DEBUG: closes type=<class 'numpy.ndarray'>, is None=False
DEBUG: prices shape=(1728,)
DEBUG: closes shape=(1728,)
DEBUG: closes type=<class 'numpy.ndarray'>, is None=False
[ULTRA-FAST TURBO] Processing 1728 bars directly with numpy arrays...
DEBUG: closes shape=(1728,)
DEBUG: Data split - train_size=518, test_times len=1210
[ULTRA-FAST TURBO] Processing 1728 bars directly with numpy arrays...
DEBUG: test_times type=<class 'numpy.ndarray'>, shape=(1210,)
DEBUG: Data split - train_size=518, test_times len=1210
DEBUG: test_closes type=<class 'numpy.ndarray'>, shape=(1210,)
DEBUG: test_times type=<class 'numpy.ndarray'>, shape=(1210,)
[ULTRA-FAST TURBO] Training HMM...
DEBUG: test_closes type=<class 'numpy.ndarray'>, shape=(1210,)
[ULTRA-FAST TURBO] Training HMM...
DEBUG: Generated params: {'measurement_noise_r': 0.11222439212928116, 'process_noise_q': 0.13401872108315943, 'hmm_window_size': 41, 'prob_threshold_trend': 0.7287889906781067, 'prob_threshold_sideways': 0.6416606335118672, 'prob_threshold_dead': 0.8882963134656989, 'ou_window_size': 160, 'hl_min': 19.507464096116944, 'hl_max': 73.95538278984198, 'relative_uncertainty_threshold': 0.47418336332313377, 'uncertainty_threshold': 0.9460291010340995, 's_entry': 3.0364616398732354, 'z_stop': 4.074430732923724, 'timeout_multiplier': 1.781655753370905, 'initial_capital': 70453.17759572658, 'commission_pct': 0.0004990153216977737}
DEBUG: Using data_key=p10, data_size_pct=0.1
DEBUG: Accessing cached_data with key 'p10'
DEBUG: Available keys in cached_data: ['full', 'p50', 'p25', 'p10', 'full_size']
DEBUG: Retrieved data_arrays, type=<class 'dict'>
DEBUG: data_key=p10
DEBUG: data_arrays keys=['times', 'opens', 'highs', 'lows', 'closes', 'volumes']
DEBUG: 'times' in data_arrays=True
DEBUG: times type=<class 'numpy.ndarray'>, shape=(1728,)
DEBUG: 'closes' in data_arrays=True
DEBUG: closes type=<class 'numpy.ndarray'>, shape=(1728,)
DEBUG: Calling turbo_process_dataset with numpy arrays...
DEBUG: About to call strategy.turbo_process_dataset
DEBUG: times available: True
DEBUG: closes available: True
DEBUG: turbo_process_dataset called
DEBUG: times type=<class 'numpy.ndarray'>, is None=False
DEBUG: times shape=(1728,)
DEBUG: prices type=<class 'numpy.ndarray'>, is None=False
DEBUG: prices shape=(1728,)
DEBUG: closes type=<class 'numpy.ndarray'>, is None=False
DEBUG: closes shape=(1728,)
[ULTRA-FAST TURBO] Processing 1728 bars directly with numpy arrays...
DEBUG: Data split - train_size=518, test_times len=1210
DEBUG: test_times type=<class 'numpy.ndarray'>, shape=(1210,)
DEBUG: test_closes type=<class 'numpy.ndarray'>, shape=(1210,)
[ULTRA-FAST TURBO] Training HMM...
[ULTRA-FAST TURBO] Running Kalman Filter (batch)...
[ULTRA-FAST TURBO] Running Kalman Filter (batch)...
[ULTRA-FAST TURBO] Running Kalman Filter (batch)...
[ULTRA-FAST TURBO] Detecting regimes (batch)...
[ULTRA-FAST TURBO] Calculating OU half-lives (vectorized)...
[ULTRA-FAST TURBO] Detecting regimes (batch)...
[ULTRA-FAST TURBO] Generating signals...
[ULTRA-FAST TURBO] Building trades...
DEBUG: _build_trades_vectorized called
DEBUG: times type=<class 'numpy.ndarray'>, shape=(1210,)
DEBUG: prices type=<class 'numpy.ndarray'>, shape=(1210,)
DEBUG: z_scores type=<class 'numpy.ndarray'>, shape=(1210,)
[ULTRA-FAST TURBO] Complete! Generated 0 trades
DEBUG: turbo_process_dataset completed successfully
[I 2025-10-07 02:57:14,402] Trial 1 finished with value: -1.0 and parameters: {'measurement_noise_r': 1.2138787250700127, 'process_noise_q': 0.08106720969090359, 'hmm_window_size': 23, 'prob_threshold_trend': 0.8098910030624269, 'prob_threshold_sideways': 0.6471973711122556, 'prob_threshold_dead': 0.7480879864280251, 'ou_window_size': 86, 'hl_min': 7.1361110078388705, 'hl_max': 36.237668816361946, 'relative_uncertainty_threshold': 0.8662259271629362, 'uncertainty_threshold': 0.3104517490329981, 's_entry': 1.4513056124042554, 'z_stop': 3.580091375372757, 'timeout_multiplier': 3.4479772050754813, 'initial_capital': 2368.188964491821, 'commission_pct': 0.0005772640408067005}. Best is trial 1 with value: -1.0.
[ULTRA-FAST TURBO] Detecting regimes (batch)...
[ULTRA-FAST TURBO] Calculating OU half-lives (vectorized)...
[ULTRA-FAST TURBO] Generating signals...
[ULTRA-FAST TURBO] Building trades...
DEBUG: _build_trades_vectorized called
DEBUG: times type=<class 'numpy.ndarray'>, shape=(1210,)
DEBUG: prices type=<class 'numpy.ndarray'>, shape=(1210,)
DEBUG: z_scores type=<class 'numpy.ndarray'>, shape=(1210,)
[ULTRA-FAST TURBO] Complete! Generated 0 trades
DEBUG: turbo_process_dataset completed successfully
[I 2025-10-07 02:57:14,454] Trial 2 finished with value: -1.0 and parameters: {'measurement_noise_r': 0.11222439212928116, 'process_noise_q': 0.13401872108315943, 'hmm_window_size': 41, 'prob_threshold_trend': 0.7287889906781067, 'prob_threshold_sideways': 0.6416606335118672, 'prob_threshold_dead': 0.8882963134656989, 'ou_window_size': 160, 'hl_min': 19.507464096116944, 'hl_max': 73.95538278984198, 'relative_uncertainty_threshold': 0.47418336332313377, 'uncertainty_threshold': 0.9460291010340995, 's_entry': 3.0364616398732354, 'z_stop': 4.074430732923724, 'timeout_multiplier': 1.781655753370905, 'initial_capital': 70453.17759572658, 'commission_pct': 0.0004990153216977737}. Best is trial 1 with value: -1.0.
[ULTRA-FAST TURBO] Calculating OU half-lives (vectorized)...
[ULTRA-FAST TURBO] Generating signals...
[ULTRA-FAST TURBO] Building trades...
DEBUG: _build_trades_vectorized called
DEBUG: times type=<class 'numpy.ndarray'>, shape=(1210,)
DEBUG: prices type=<class 'numpy.ndarray'>, shape=(1210,)
DEBUG: z_scores type=<class 'numpy.ndarray'>, shape=(1210,)
[ULTRA-FAST TURBO] Complete! Generated 0 trades
DEBUG: turbo_process_dataset completed successfully
[I 2025-10-07 02:57:14,482] Trial 0 finished with value: -1.0 and parameters: {'measurement_noise_r': 0.8770765422007163, 'process_noise_q': 0.013240417204288008, 'hmm_window_size': 66, 'prob_threshold_trend': 0.6361390189545194, 'prob_threshold_sideways': 0.5519780050674119, 'prob_threshold_dead': 0.8306252913241178, 'ou_window_size': 124, 'hl_min': 20.363879809286047, 'hl_max': 35.982885591814096, 'relative_uncertainty_threshold': 0.9812811167523088, 'uncertainty_threshold': 0.8464229196130091, 's_entry': 3.4808936518669014, 'z_stop': 4.195609048868377, 'timeout_multiplier': 2.4104116251408922, 'initial_capital': 81632.99234739246, 'commission_pct': 0.0009820180151630927}. Best is trial 1 with value: -1.0.
Running final backtest with best parameters...
DEBUG: turbo_process_dataset called
DEBUG: times type=<class 'numpy.ndarray'>, is None=False
DEBUG: times shape=(17280,)
DEBUG: prices type=<class 'numpy.ndarray'>, is None=False
DEBUG: prices shape=(17280,)
DEBUG: closes type=<class 'numpy.ndarray'>, is None=False
DEBUG: closes shape=(17280,)
[ULTRA-FAST TURBO] Processing 17280 bars directly with numpy arrays...
DEBUG: Data split - train_size=5184, test_times len=12096
DEBUG: test_times type=<class 'numpy.ndarray'>, shape=(12096,)
DEBUG: test_closes type=<class 'numpy.ndarray'>, shape=(12096,)
[ULTRA-FAST TURBO] Training HMM...
[ULTRA-FAST TURBO] Running Kalman Filter (batch)...
[ULTRA-FAST TURBO] Detecting regimes (batch)...
[ULTRA-FAST TURBO] Calculating OU half-lives (vectorized)...
[ULTRA-FAST TURBO] Generating signals...
[ULTRA-FAST TURBO] Building trades...
DEBUG: _build_trades_vectorized called
DEBUG: times type=<class 'numpy.ndarray'>, shape=(12096,)
DEBUG: prices type=<class 'numpy.ndarray'>, shape=(12096,)
DEBUG: z_scores type=<class 'numpy.ndarray'>, shape=(12096,)
[ULTRA-FAST TURBO] Complete! Generated 0 trades
Final backtest completed with 0 trades
Sharpe Ratio: 0.00
Net P&L: $0.00
Return: 0.00%
Optimization completed in 4.40 seconds
Best sharpe_ratio: -1.0000
Speedup: ~8x with parallel processing
Additional speedup: ~2-5x with adaptive evaluation
UNIFIED OPTIMIZATION MANAGER: Optimization completed successfully