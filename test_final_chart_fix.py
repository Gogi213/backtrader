"""
–§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢: –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –≥—Ä–∞—Ñ–∏–∫ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—Ç–∞–µ—Ç
"""
import sys
import os

# Add src to path
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

def final_chart_test():
    """–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –≥—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç"""
    print("=" * 60)
    print("–§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –ì–†–ê–§–ò–ö–ê")
    print("=" * 60)

    try:
        from PyQt6.QtWidgets import QApplication
        from src.gui.gui_visualizer import ProfessionalBacktester

        # –°–æ–∑–¥–∞–µ–º GUI
        app = QApplication.instance()
        if app is None:
            app = QApplication([])

        gui = ProfessionalBacktester()

        # –ë—ã—Å—Ç—Ä—ã–π –±—ç–∫—Ç–µ—Å—Ç
        dataset = gui.dataset_combo.currentText()
        dataset_path = gui.dataset_manager.get_dataset_path(dataset)
        symbol = gui.dataset_manager.extract_symbol(dataset)
        config = gui.config

        from src.gui.config.config_models import BacktestWorker

        result_captured = None

        def capture(result):
            nonlocal result_captured
            result_captured = result

        worker = BacktestWorker(dataset_path, symbol, config, tick_mode=True, max_ticks=None)
        worker.result_signal.connect(capture)
        worker.run()

        if result_captured:
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π workflow
            gui.results_data = result_captured
            gui._display_results()

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            chart_items = len(gui.chart_signals_tab.chart.plot_widget.listDataItems())
            trades_count = len(result_captured.get('trades', []))
            bb_points = len(result_captured.get('bb_data', {}).get('times', []))

            print(f"""
–†–ï–ó–£–õ–¨–¢–ê–¢–´ –§–ò–ù–ê–õ–¨–ù–û–ì–û –¢–ï–°–¢–ê:

[–ì–†–ê–§–ò–ö]
- –≠–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –≥—Ä–∞—Ñ–∏–∫–µ: {chart_items}
- –°—Ç–∞—Ç—É—Å: {'‚úì –†–ê–ë–û–¢–ê–ï–¢' if chart_items > 0 else '‚úó –ù–ï –†–ê–ë–û–¢–ê–ï–¢'}

[–î–ê–ù–ù–´–ï]
- –¢–æ—Ä–≥–æ–≤—ã–µ —Å–¥–µ–ª–∫–∏: {trades_count}
- BB —Ç–æ—á–∫–∏: {bb_points}

[–ò–¢–û–ì]
{'üéØ –ì–†–ê–§–ò–ö –ü–û–õ–ù–û–°–¢–¨–Æ –ò–°–ü–†–ê–í–õ–ï–ù!' if chart_items > 0 else 'üö® –ì–†–ê–§–ò–ö –í–°–ï –ï–©–ï –ù–ï –†–ê–ë–û–¢–ê–ï–¢'}
            """)

            return chart_items > 0

        else:
            print("–û—à–∏–±–∫–∞: –Ω–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –æ—Ç worker")
            return False

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
        return False

if __name__ == "__main__":
    success = final_chart_test()
    print("=" * 60)
    print(f"–§–ò–ù–ê–õ–¨–ù–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢: {'–£–°–ü–ï–•' if success else '–ù–ï–£–î–ê–ß–ê'}")
    print("=" * 60)